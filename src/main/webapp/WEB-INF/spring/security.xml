<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	https://www.springframework.org/schema/security/spring-security.xsd">

	<http pattern="/static/**" security="none" />

	<beans:bean id="customAuthenticationFailureHandler"
		class="vn.com.unit.security.CustomAuthenticationFailureHandler" />

	<beans:bean name="customAccessDeniedHandler"
		class="vn.com.unit.security.CustomAccessDeniedHandler" />

	<beans:bean id="customAuthenticationSuccessHandler"
		class="vn.com.unit.security.CustomAuthenticationSuccessHandler" />

	<http auto-config="true" use-expressions="true"
		pattern="/webhook/momo">
		<csrf disabled="true" />
	</http>

	<http auto-config="true" use-expressions="true"
		disable-url-rewriting="true">

		<access-denied-handler
			ref="customAccessDeniedHandler" />

		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/register" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/webhook/momo"
			access="permitAll" />

		<intercept-url pattern="/**"
			access="hasAnyRole('ROLE_USER', 'ROLE_VENDOR', 'ROLE_ADMIN')" />

		<form-login login-page="/login"
			login-processing-url="/login"

			authentication-success-handler-ref="customAuthenticationSuccessHandler"

			authentication-failure-url="/login?error=true"

			authentication-failure-handler-ref="customAuthenticationFailureHandler"

			always-use-default-target="true" />

		<csrf disabled="false" />

		<logout logout-success-url="/login" logout-url="/logout"
			delete-cookies="JSESSIONID" invalidate-session="true" />

		<!-- session-registry-alias="sessionRegistry" -->
		<!-- session-registry-ref="sessionRegistry" -->
		<session-management
			invalid-session-url="/login?error=timeout"
			session-fixation-protection="newSession">
			<concurrency-control
				error-if-maximum-exceeded="false"
				expired-url="/login?error=max_session" max-sessions="1" />
		</session-management>

	</http>

	<!-- <beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl">
		<beans:constructor-arg ref="sessionRepository" />
	</beans:bean> -->

	<!-- <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" 
		/> -->

	<!-- <session-management> <concurrency-control expired-url="/sessionExpired.html"/> 
		</session-management> -->

	<!-- <session-management invalid-session-url="/invalidSession.html"> </session-management> -->

	<!-- <session-config> <tracking-mode>COOKIE</tracking-mode> </session-config> -->

	<global-method-security
		pre-post-annotations="enabled" />

	<beans:bean id="customAuthenticationProvider"
		class="vn.com.unit.security.CustomAuthenticationProvider" />

	<authentication-manager>
		<authentication-provider
			ref="customAuthenticationProvider" />
	</authentication-manager>

</b:beans>